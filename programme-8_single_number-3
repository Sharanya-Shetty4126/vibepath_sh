//leetcode
//bit
//single number -3
class Solution {
    public int[] singleNumber(int[] nums) {


int n=nums.length;
if(n==2)return nums;
int []o=new int [2];
int res=0;
for(int i=0;i<n;i++){
    res^=nums[i];
}
int twos=res&(-res);
int s1[]=new int [n];
int s2[]=new int [n];
int k=0,j=0;
for(int i=0;i<n;i++){
if((nums[i]&twos)>0)s1[j++]=nums[i];
else s2[k++]=nums[i];

}
for(int i=0;i<j;i++)
o[0]=o[0]^s1[i];
for(int p=0;p<k;p++)
o[1]=o[1]^s2[p];

return o;

        
    }
}
